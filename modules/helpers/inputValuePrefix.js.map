{"version":3,"sources":["../../source/helpers/inputValuePrefix.js"],"names":["getCountryCallingCode","getInputValuePrefix","country","international","withCountryCallingCode","metadata","removeInputValuePrefix","value","prefix","slice","length"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,wBAAtC;AAEA,OAAO,SAASC,mBAAT,OAKJ;AAAA,MAJFC,OAIE,QAJFA,OAIE;AAAA,MAHFC,aAGE,QAHFA,aAGE;AAAA,MAFFC,sBAEE,QAFFA,sBAEE;AAAA,MADFC,QACE,QADFA,QACE;AACF,SAAOH,OAAO,IAAIC,aAAX,IAA4B,CAACC,sBAA7B,cACFJ,qBAAqB,CAACE,OAAD,EAAUG,QAAV,CADnB,IAEN,EAFD;AAGA;AAED,OAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAuCC,MAAvC,EAA+C;AACrD,MAAIA,MAAJ,EAAY;AACXD,IAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAYD,MAAM,CAACE,MAAnB,CAAR;;AACA,QAAIH,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AACrBA,MAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAR;AACA;AACD;;AACD,SAAOF,KAAP;AACA","sourcesContent":["import { getCountryCallingCode } from 'libphonenumber-js/core'\n\nexport function getInputValuePrefix({\n\tcountry,\n\tinternational,\n\twithCountryCallingCode,\n\tmetadata\n}) {\n\treturn country && international && !withCountryCallingCode ?\n\t\t`+${getCountryCallingCode(country, metadata)}` :\n\t\t''\n}\n\nexport function removeInputValuePrefix(value, prefix) {\n\tif (prefix) {\n\t\tvalue = value.slice(prefix.length)\n\t\tif (value[0] === ' ') {\n\t\t\tvalue = value.slice(1)\n\t\t}\n\t}\n\treturn value\n}"],"file":"inputValuePrefix.js"}