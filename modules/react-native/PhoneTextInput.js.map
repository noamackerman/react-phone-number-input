{"version":3,"sources":["../../source/react-native/PhoneTextInput.js"],"names":["React","useCallback","PropTypes","TextInput","PhoneTextInput","ref","placeholder","autoComplete","autoFocus","value","onChange","onChangeText","preventDefault","defaultPrevented","target","forwardRef","propTypes","string","bool","func","isRequired"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA;;;;;AAIA,SAASC,cAAT,OAMGC,GANH,EAMQ;AAAA,MALNC,WAKM,QALNA,WAKM;AAAA,MAJNC,YAIM,QAJNA,YAIM;AAAA,MAHNC,SAGM,QAHNA,SAGM;AAAA,MAFNC,KAEM,QAFNA,KAEM;AAAA,MADNC,QACM,QADNA,QACM;AACN;AACA,MAAMC,YAAY,GAAGV,WAAW,CAAC,UAACQ,KAAD,EAAW;AAC1CC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,cADO,4BACU;AAAE,aAAKC,gBAAL,GAAwB,IAAxB;AAA8B,OAD1C;AAEPC,MAAAA,MAAM,EAAE;AAAEL,QAAAA,KAAK,EAALA;AAAF;AAFD,KAAD,CAAR;AAID,GAL+B,EAK7B,CAACC,QAAD,CAL6B,CAAhC;AAMA,SACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEL,GADP;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,SAAS,EAAEE,SAHb;AAIE,IAAA,gBAAgB,EAAED,YAJpB;AAKE,IAAA,YAAY,EAAC,WALf;AAME,IAAA,YAAY,EAAEI,YANhB;AAOE,IAAA,KAAK,EAAEF;AAPT,IADF;AAUD;;AAEDL,cAAc,GAAGJ,KAAK,CAACe,UAAN,CAAiBX,cAAjB,CAAjB;AAEAA,cAAc,CAACY,SAAf,GAA2B;AACzBV,EAAAA,WAAW,EAAEJ,SAAS,CAACe,MADE;AAEzBV,EAAAA,YAAY,EAAEL,SAAS,CAACe,MAFC;AAGzBT,EAAAA,SAAS,EAAEN,SAAS,CAACgB,IAHI;AAIzBT,EAAAA,KAAK,EAAEP,SAAS,CAACe,MAJQ;AAKzBP,EAAAA,QAAQ,EAAER,SAAS,CAACiB,IAAV,CAAeC;AALA,CAA3B;AAQA,eAAehB,cAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { TextInput } from 'react-native'\n\n/**\n * This is an _experimental_ React Native component.\n * Feedback thread: https://github.com/catamphetamine/react-phone-number-input/issues/296\n */\nfunction PhoneTextInput({\n  placeholder,\n  autoComplete,\n  autoFocus,\n  value,\n  onChange\n}, ref) {\n  // Instead of `onChangeText` it could use `onChange` and get `value` from `nativeEvent.text`.\n  const onChangeText = useCallback((value) => {\n    onChange({\n      preventDefault() { this.defaultPrevented = true },\n      target: { value }\n    })\n  }, [onChange])\n  return (\n    <TextInput\n      ref={ref}\n      placeholder={placeholder}\n      autoFocus={autoFocus}\n      autoCompleteType={autoComplete}\n      keyboardType=\"phone-pad\"\n      onChangeText={onChangeText}\n      value={value}/>\n  )\n}\n\nPhoneTextInput = React.forwardRef(PhoneTextInput)\n\nPhoneTextInput.propTypes = {\n  placeholder: PropTypes.string,\n  autoComplete: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default PhoneTextInput"],"file":"PhoneTextInput.js"}