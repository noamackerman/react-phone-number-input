{"version":3,"sources":["../../source/helpers/countries.test.js"],"names":["describe","it","value","label","should","deep","equal","divider","metadata","expect","to","be","undefined"],"mappings":"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","sourcesContent":["import metadata from 'libphonenumber-js/metadata.min.json'\n\nimport {\n\tsortCountryOptions,\n\tgetSupportedCountryOptions,\n\tisCountrySupportedWithError,\n\tgetSupportedCountries\n} from './countries'\n\ndescribe('helpers/countries', () => {\n\tit('should sort country options (no `order`)', () => {\n\t\tsortCountryOptions([\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t}\n\t\t]).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with a divider)', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '|', 'RU']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tdivider: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with \"...\")', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '|', '...']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tdivider: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with \"…\")', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '|', '…']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tdivider: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with \"🌐\")', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'International'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '🌐', '…']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'International'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should get supported country options', () => {\n\t\tgetSupportedCountryOptions([\n\t\t\t'🌐',\n\t\t\t'RU',\n\t\t\t'XX',\n\t\t\t'@',\n\t\t\t'|',\n\t\t\t'…',\n\t\t\t'...',\n\t\t\t'.'\n\t\t], metadata).should.deep.equal([\n\t\t\t'🌐',\n\t\t\t'RU',\n\t\t\t'|',\n\t\t\t'…',\n\t\t\t'...'\n\t\t])\n\t})\n\n\tit('should get supported country options (none supported)', () => {\n\t\texpect(getSupportedCountryOptions([\n\t\t\t'XX',\n\t\t\t'@',\n\t\t\t'.'\n\t\t], metadata)).to.be.undefined\n\t})\n\n\tit('should get supported country options (none supplied)', () => {\n\t\texpect(getSupportedCountryOptions(undefined, metadata)).to.be.undefined\n\t})\n\n\tit('should tell is country is supported with error', () => {\n\t\tisCountrySupportedWithError('RU', metadata).should.equal(true)\n\t\tisCountrySupportedWithError('XX', metadata).should.equal(false)\n\t})\n\n\tit('should get supported countries', () => {\n\t\tgetSupportedCountries(['RU', 'XX'], metadata).should.deep.equal(['RU'])\n\t})\n\n\tit('should get supported countries (none supported)', () => {\n\t\texpect(getSupportedCountries(['XX'], metadata)).to.be.undefined\n\t})\n})"],"file":"countries.test.js"}